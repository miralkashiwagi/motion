---
import { type CollectionEntry } from 'astro:content';
import PlaceholderImage from './PlaceholderImage.astro';
import { categoryMapping } from '../content/config';

interface Props {
  animation: CollectionEntry<'animations'>;
}

const { animation } = Astro.props;
const { title, parentCategory, category, difficulty } = animation.data;
const { slug } = animation;

// 難易度に基づいたバッジクラス
const difficultyClasses = {
  beginner: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400',
  intermediate: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400',
  advanced: 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400',
};

const difficultyClass = difficulty && difficultyClasses[difficulty] ? difficultyClasses[difficulty] : 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400';

// 難易度のラベル
const difficultyLabels = {
  beginner: '初級',
  intermediate: '中級',
  advanced: '上級'
};

// 親カテゴリーの色を取得
const getParentCategoryColor = (cat: string) => {
  if (!cat) return '#6b7280'; // デフォルト色
  return categoryMapping[cat]?.color || '#6b7280';
};

// カードのURL生成
const cardUrl = `${import.meta.env.BASE_URL}/animations/${slug.replace(/^\/+/, '')}`;

// カテゴリーIDの取得（カテゴリーページへのリンク用）
const categoryId = parentCategory && categoryMapping[parentCategory] ? categoryMapping[parentCategory].id : '';

---

<a href={cardUrl} class="group">
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1 focus-within:ring-2 focus-within:ring-indigo-500">
    <div class="aspect-video relative overflow-hidden bg-gray-100 dark:bg-gray-900">
      <PlaceholderImage 
        text={title}
        className="w-full h-full"
        bgColor={getParentCategoryColor(parentCategory)}
      />
      <div class="absolute top-2 right-2 flex flex-col gap-1 items-end">
        <span class={`text-xs font-medium px-2.5 py-0 rounded ${difficultyClass}`}>
          {difficulty && difficultyLabels[difficulty] ? difficultyLabels[difficulty] : '未分類'}
        </span>
      </div>
    </div>
    <div class="p-3">
      <div class="flex flex-wrap gap-2 mb-2">
        {categoryId && (
          <span class="inline-block px-2 py-1 text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-400 rounded-md hover:bg-indigo-200 dark:hover:bg-indigo-800/50 transition-colors">
            {parentCategory}
          </span>
        )}
        {category && (
          <span class="inline-block px-2 py-1 text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300 rounded-md">
            {category}
          </span>
        )}
      </div>
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors">
        {title}
      </h3>
    </div>
  </div>
</a>
