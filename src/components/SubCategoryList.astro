---
// SubCategoryList.astro
import { getCollection } from 'astro:content';

const { category } = Astro.props;

// すべてのアニメーションを取得
const allAnimations = await getCollection('animations');

// カテゴリに基づいてアニメーションをフィルタリング
const categoryAnimations = allAnimations.filter(animation => {
  // カテゴリIDに基づいてフィルタリング
  if (category === 'interactive-animations') {
    return ['ホバーエフェクト', 'ボタンエフェクト', 'カードエフェクト'].includes(animation.data.category);
  } else if (category === 'menu-animations') {
    return ['ハンバーガーメニュー', 'ドロップダウン', 'メガメニュー'].includes(animation.data.category);
  } else if (category === 'scroll-animations') {
    return ['スクロールトリガー', 'パララックス'].includes(animation.data.category);
  } else if (category === 'text-animations') {
    return ['タイピングエフェクト', 'テキストエフェクト'].includes(animation.data.category);
  } else if (category === 'page-animations') {
    return ['ローディングアニメーション', 'ページトランジション'].includes(animation.data.category);
  } else if (category === 'others') {
    return ['特殊効果'].includes(animation.data.category);
  }
  return false;
});

// サブカテゴリを抽出
const subcategories = [];
if (category === 'interactive-animations') {
  // ホバーエフェクトのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'ホバーエフェクト')) {
    subcategories.push({
      id: 'hover',
      name: 'ホバーエフェクト',
      description: 'マウスホバー時に要素の見た目や動きが変化するエフェクト'
    });
  }
  // ボタンエフェクトのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'ボタンエフェクト')) {
    subcategories.push({
      id: 'button',
      name: 'ボタンエフェクト',
      description: 'クリック時やホバー時のボタンの動きや変化を強調するエフェクト'
    });
  }
  // カードエフェクトのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'カードエフェクト')) {
    subcategories.push({
      id: 'card',
      name: 'カードエフェクト',
      description: 'カードUIの動きや変化を強調するエフェクト'
    });
  }
} else if (category === 'menu-animations') {
  // ハンバーガーメニューのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'ハンバーガーメニュー')) {
    subcategories.push({
      id: 'hamburger',
      name: 'ハンバーガーメニュー',
      description: 'モバイル向けのハンバーガーメニューの開閉アニメーション'
    });
  }
  // ドロップダウンのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'ドロップダウン')) {
    subcategories.push({
      id: 'dropdown',
      name: 'ドロップダウン',
      description: 'クリックやホバーで表示されるドロップダウンメニューのアニメーション'
    });
  }
  // メガメニューのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'メガメニュー')) {
    subcategories.push({
      id: 'mega-menu',
      name: 'メガメニュー',
      description: '大規模なナビゲーションメニューの表示アニメーション'
    });
  }
} else if (category === 'scroll-animations') {
  // スクロールトリガーのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'スクロールトリガー')) {
    subcategories.push({
      id: 'scroll-trigger',
      name: 'スクロールトリガー',
      description: 'スクロール位置に応じて要素が表示・非表示されるアニメーション'
    });
  }
  // パララックスのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'パララックス')) {
    subcategories.push({
      id: 'parallax',
      name: 'パララックス',
      description: 'スクロール時に複数のレイヤーが異なる速度で動くエフェクト'
    });
  }
} else if (category === 'text-animations') {
  // タイピングエフェクトのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'タイピングエフェクト')) {
    subcategories.push({
      id: 'typing',
      name: 'タイピングエフェクト',
      description: 'テキストが1文字ずつタイプされるようなアニメーション'
    });
  }
  // テキストエフェクトのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'テキストエフェクト')) {
    subcategories.push({
      id: 'text-effects',
      name: 'テキストエフェクト',
      description: 'テキストの変形や色の変化など、様々なテキストアニメーション'
    });
  }
} else if (category === 'page-animations') {
  // ローディングアニメーションのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'ローディングアニメーション')) {
    subcategories.push({
      id: 'loading',
      name: 'ローディングアニメーション',
      description: 'ページやコンテンツの読み込み中に表示されるアニメーション'
    });
  }
  // ページトランジションのアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === 'ページトランジション')) {
    subcategories.push({
      id: 'transition',
      name: 'ページトランジション',
      description: 'ページ間の遷移時に表示されるアニメーション'
    });
  }
} else if (category === 'others') {
  // 特殊効果のアニメーションがあるか確認
  if (categoryAnimations.some(animation => animation.data.category === '特殊効果')) {
    subcategories.push({
      id: 'special-effects',
      name: '特殊効果',
      description: '他のカテゴリに分類されない特殊なアニメーション効果'
    });
  }
}

// 現在のカテゴリのサブカテゴリを取得
const currentSubcategories = subcategories;
---

{currentSubcategories.length > 0 && (
  <div class="mt-8 mb-12">
    <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">サブカテゴリ</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      {currentSubcategories.map(subcategory => (
        <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
          <h4 class="font-medium text-gray-900 dark:text-white mb-2">
            {subcategory.name}
          </h4>
          <p class="text-sm text-gray-600 dark:text-gray-400">
            {subcategory.description}
          </p>
        </div>
      ))}
    </div>
  </div>
)}
